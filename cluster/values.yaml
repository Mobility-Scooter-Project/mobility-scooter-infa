# https://github.com/kubernetes/cloud-provider-openstack/blob/master/charts/openstack-cloud-controller-manager/values.yaml
openstack-cloud-controller-manager:
  nodeSelector:
    node-role.kubernetes.io/control-plane: true

# https://github.com/kubernetes/cloud-provider-openstack/blob/master/charts/cinder-csi-plugin/values.yaml
csi:
  storageClass:
  enabled: true
  secret:
    enabled: true
    name: cloud-config

# https://github.com/bitnami/charts/blob/main/bitnami/external-dns/values.yaml
external-dns:
  provider: designate
  extraEnvSecret: cloud-env

# ./charts/designate-certmanager-webhook/values.yaml
designate-certmanager-webhook:
  credentialsSecret: cloud-env

# https://github.com/cert-manager/cert-manager/blob/master/deploy/charts/cert-manager/values.yaml
cert-manager:
  crds:
    enabled: true

# https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd  
argo-cd:
  domain: argocd.cis240470.projects.jetstream-cloud.org
  configs:
    params:
      server.insecure: true # enables traefik to manage TLS termination
  server:
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        external-dns.alpha.kubernetes.io/hostname: argocd.cis240470.projects.jetstream-cloud.org
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
      extraTls:
        - hosts:
          - argocd.cis240470.projects.jetstream-cloud.org
          secretName: argocd-server-tls

# https://github.com/argoproj/argo-helm/blob/main/charts/argocd-apps/values.yaml
argocd-apps:
  applicationsets:
    "mobility-scooter-project":
      generators:
      - scmProvider:
          cloneProtocol: https
          github:
            # The GitHub organization to scan.
            organization: mobility-scooter-project
            allBranches: true
            tokenRef:
              secretName: argocd-github
              key: token
          filters:
            - repositoryMatch: .*
              pathsExist: [k8s]
      goTemplate: true
      template:
        metadata:
          name: '{{ .repository | normalize }}'
        spec:
          source:
            repoURL: '{{ .url }}'
            targetRevision: '{{ .branch }}'
            path: k8s
          project: default
          destination:
            server: https://kubernetes.default.svc
            namespace: default
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            syncOptions:
              - CreateNamespace=true